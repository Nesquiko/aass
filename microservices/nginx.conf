worker_processes auto;
pid /var/run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/problem+json application/javascript text/xml application/xml application/xml+rss text/javascript;

    server {
        listen 80;
        server_name localhost;

        # Default location for basic health check or info
        location / {
            return 200 'API Gateway is running\n';
            add_header Content-Type text/plain;
        }


        # Auth Service
        # location /api/auth/ {
        #     # The trailing slash in proxy_pass is important!
        #     # It tells Nginx to replace the matched location (/api/auth/)
        #     # with the path specified after the hostname (/) in proxy_pass.
        #     # So, a request to /api/auth/login becomes http://auth-service:8080/login
        #     proxy_pass http://auth-service:8080/;
        #
        #     # Standard proxy headers
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #
        #     # CORS Headers (Example - adjust origin if needed)
        #     add_header 'Access-Control-Allow-Origin' '*' always;
        #     add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        #     add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
        #     if ($request_method = 'OPTIONS') {
        #         return 204;
        #     }
        # }
        #
        # # Medical History Service (Needs to be more specific than /api/patients/)
        # # Using regex to capture patientId. Adjust port if needed.
        # location ~ ^/api/patients/([a-fA-F0-9-]+)/medical-history/files {
        #     # Pass the request, including the captured patientId in the path
        #     proxy_pass http://medical-history-service:8080/patients/$1/medical-history/files;
        #
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #
        #     # CORS Headers
        #     add_header 'Access-Control-Allow-Origin' '*' always;
        #     add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        #     add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
        #     if ($request_method = 'OPTIONS') {
        #         return 204;
        #     }
        # }
        #
        # # Patient Service (Handles remaining /api/patients/ paths)
        # location /api/patients/ {
        #     proxy_pass http://patient-service:8080/;
        #
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #
        #     # CORS Headers
        #     add_header 'Access-Control-Allow-Origin' '*' always;
        #     add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        #     add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
        #     if ($request_method = 'OPTIONS') {
        #         return 204;
        #     }
        # }
        #
        # # Doctor Service
        # location /api/doctors/ {
        #     proxy_pass http://doctor-service:8080/;
        #
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #
        #     # CORS Headers
        #     add_header 'Access-Control-Allow-Origin' '*' always;
        #     add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        #     add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
        #     if ($request_method = 'OPTIONS') {
        #         return 204;
        #     }
        # }
        #
        # # Appointment Service
        # location /api/appointments/ {
        #     proxy_pass http://appointment-service:8080/;
        #
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #
        #     # CORS Headers
        #     add_header 'Access-Control-Allow-Origin' '*' always;
        #     add_header 'Access-Control-Allow-Methods' 'GET, POST, PATCH, DELETE, OPTIONS' always;
        #     add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
        #     if ($request_method = 'OPTIONS') {
        #         return 204;
        #     }
        # }
        #
        # # Condition Service
        # location /api/conditions/ {
        #     proxy_pass http://condition-service:8080/;
        #
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #
        #     # CORS Headers
        #     add_header 'Access-Control-Allow-Origin' '*' always;
        #     add_header 'Access-Control-Allow-Methods' 'GET, POST, PATCH, OPTIONS' always;
        #     add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
        #     if ($request_method = 'OPTIONS') {
        #         return 204;
        #     }
        # }
        #
        # # Prescription Service
        # location /api/prescriptions/ {
        #     proxy_pass http://prescription-service:8080/;
        #
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #
        #     # CORS Headers
        #     add_header 'Access-Control-Allow-Origin' '*' always;
        #     add_header 'Access-Control-Allow-Methods' 'GET, POST, PATCH, DELETE, OPTIONS' always;
        #     add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
        #     if ($request_method = 'OPTIONS') {
        #         return 204;
        #     }
        # }
        #
        # # Resource Service
        # location /api/resources/ {
        #     proxy_pass http://resource-service:8080/;
        #
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #
        #     # CORS Headers
        #     add_header 'Access-Control-Allow-Origin' '*' always;
        #     add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always; # Add DELETE if needed for reservations
        #     add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
        #     if ($request_method = 'OPTIONS') {
        #         return 204;
        #     }
        # }

        proxy_intercept_errors on;
        error_page 500 502 503 504 /50x.json;
        location = /50x.json {
             root /usr/share/nginx/html;
             internal;
             default_type application/json;
             return 500 '{"error": "Internal Server Error", "message": "An error occurred processing your request."}';
        }

        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }
}
