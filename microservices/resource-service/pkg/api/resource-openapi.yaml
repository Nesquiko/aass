openapi: 3.0.4
info:
  title: Resource Service API
  version: 1.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - description: Resource Service Endpoint
    url: /
tags:
  - name: Resources
paths:
  /resources: # Corresponds to /api/resources
    post:
      tags:
        - Resources
      summary: Create resource definition (Admin)
      operationId: createResource
      requestBody:
        description: New resource to be created
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewResource"
      responses:
        "201":
          description: Created resource definition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Resource"
        "500":
          $ref: "#/components/responses/InternalServerErrorResponse"
  /resources/available: # Corresponds to /api/resources/available
    get:
      tags:
        - Resources
      summary: Get available resources for a time slot
      operationId: getAvailableResources
      parameters:
        - $ref: "#/components/parameters/date-time"
      responses:
        "200":
          description: Successfully retrieved available resources for the specified time slot.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AvailableResources"
        "500":
          $ref: "#/components/responses/InternalServerErrorResponse"

  /resources/reserve/{appointmentId}:
    post:
      tags:
        - Resources
      summary: Reserves resources for an appointment (Internal)
      operationId: reserveAppointmentResources
      parameters:
        - $ref: "#/components/parameters/appointmentId"
      requestBody:
        description: Reservation details including time and resource IDs
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - start
                - end
                - resources
              properties:
                start:
                  type: string
                  format: date-time
                end:
                  type: string
                  format: date-time
                resources:
                  type: array
                  items:
                    type: object
                    required: [id, type]
                    properties:
                      id:
                        type: string
                        format: uuid
                      type:
                        $ref: "#/components/schemas/ResourceType"

      responses:
        "204":
          description: Successfully reserved resources for the appointment.
        "404":
          description: Some resource wasn't found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorDetail"
        "409":
          description: Conflict - One or more resources are unavailable
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorDetail"
        "500":
          $ref: "#/components/responses/InternalServerErrorResponse"

  /resources/reservations:
    delete:
      tags:
        - Resources
      summary: Deletes reservations for a cancelled/rescheduled appointment (Internal)
      operationId: deleteAppointmentReservations
      parameters:
        - name: appointmentId
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Reservations deleted successfully.
        "500":
          $ref: "#/components/responses/InternalServerErrorResponse"

  /resources/{resourceId}:
    get:
      tags:
        - Resources
      summary: Get resource definition by ID
      operationId: getResourceById
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        "200":
          description: Resource definition details.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Resource"
        "404":
          description: Resource definition not found.
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorDetail"
        "500":
          $ref: "#/components/responses/InternalServerErrorResponse"

components:
  schemas:
    ResourceType:
      type: string
      enum:
        - medicine
        - facility
        - equipment
    Resource:
      type: object
      description: Represents a resource definition.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        type:
          $ref: "#/components/schemas/ResourceType"
      required:
        - id
        - name
        - type
    NewResource:
      type: object
      description: Represents a new resource definition to be created.
      properties:
        name:
          type: string
        type:
          $ref: "#/components/schemas/ResourceType"
      required:
        - name
        - type
    Facility:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      required:
        - id
        - name
    Equipment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      required:
        - id
        - name
    Medicine:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      required:
        - id
        - name
    AvailableResources:
      type: object
      properties:
        facilities:
          type: array
          items:
            $ref: "#/components/schemas/Facility"
        equipment:
          type: array
          items:
            $ref: "#/components/schemas/Equipment"
        medicine:
          type: array
          items:
            $ref: "#/components/schemas/Medicine"
      required:
        - facilities
        - equipment
        - medicine
    ResourceReservation:
      type: object
      required:
        - id
        - appointmentId
        - resourceId
        - resourceType
        - startTime
        - endTime
      properties:
        id:
          type: string
          format: uuid
        appointmentId:
          type: string
          format: uuid
        resourceId:
          type: string
          format: uuid
        resourceName:
          type: string
        resourceType:
          $ref: "#/components/schemas/ResourceType"
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
    ErrorDetail:
      type: object
      description: Standardized error details (RFC 9457).
      properties:
        title:
          type: string
        code:
          type: string
        status:
          type: integer
          format: int
        detail:
          type: string
      additionalProperties: true
      required:
        - title
        - code
        - status
        - detail

  parameters:
    resourceId:
      name: resourceId
      in: path
      required: true
      description: The unique identifier (UUID) of a resource definition.
      schema:
        type: string
        format: uuid
    appointmentId:
      name: appointmentId
      in: path
      required: true
      description: The unique identifier (UUID) of the appointment making the reservation.
      schema:
        type: string
        format: uuid
    date-time:
      name: date-time
      in: query
      required: true
      schema:
        type: string
        format: date-time

  responses:
    InternalServerErrorResponse:
      description: An error occurred. See specific status code for details.
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/ErrorDetail"
          example:
            title: Internal server error
            status: 500
            code: internal.server.error
            detail: An unknown server error occurred
