services:
  api-gateway:
    image: nginx:stable-alpine
    container_name: api-gateway
    ports:
      - "42069:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./api-gateway-logs:/var/log/nginx
    networks:
      - medical_network
    restart: unless-stopped
    depends_on:
      - patient-service
      - doctor-service
    # - auth-service
    # - appointment-service
    # - condition-service
    # - prescription-service
    # - resource-service
    # - medical-history-service

  mongo_db:
    image: mongo:7.0-rc
    container_name: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - db_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mysecret
    networks:
      - medical_network

  mongo_express:
    image: mongo-express
    container_name: mongo_express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: mysecret
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_BASICAUTH_USERNAME: mexpress
      ME_CONFIG_BASICAUTH_PASSWORD: mexpress
    depends_on:
      - mongo_db
    networks:
      - medical_network

  patient-service:
    build:
      context: .
      dockerfile: ./patient-service/Dockerfile
    container_name: patient-service
    env_file:
      - ./patient-service/local.env
    networks:
      - medical_network
    restart: unless-stopped
    depends_on:
      - mongo_db

  doctor-service:
    build:
      context: .
      dockerfile: ./doctor-service/Dockerfile
    container_name: doctor-service
    env_file:
      - ./doctor-service/local.env
    networks:
      - medical_network
    restart: unless-stopped
    depends_on:
      - mongo_db

networks:
  medical_network:
    driver: bridge

volumes:
  db_data: {}
