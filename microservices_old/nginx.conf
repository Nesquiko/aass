worker_processes auto;
pid /var/run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

	resolver 127.0.0.11 valid=30s;

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/problem+json application/javascript text/xml application/xml application/xml+rss text/javascript;

    server {
        listen 80;
        server_name localhost;

        # Default location for basic health check or info
        location / {
            return 200 'API Gateway is running\n';
            add_header Content-Type text/plain;
        }


        # Auth Service
        location /api/auth/ {
            proxy_pass http://auth-service:8080/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }


		# Medical History Service (Specific patient route)
		location ~ ^/api/patients/([a-fA-F0-9-]+)/medical-history/files {
			proxy_pass http://medical-history-service:8080/patients/$1/medical-history/files$is_args$args;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}

        # Appointment Service (Specific patient routes - BEFORE general patient route)
        location ~ ^/api/patients/([a-fA-F0-9-]+)/appointments {
            # Map /api/patients/{id}/appointments... -> /patients/{id}/appointments...
            rewrite ^/api(/.*)$ $1 break; # Strip /api prefix
            proxy_pass http://appointment-service:8080; # Proxy to root, backend router handles /patients/...

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
         location ~ ^/api/patients/([a-fA-F0-9-]+)/appointment/([a-fA-F0-9-]+) {
            # Map /api/patients/{id}/appointment/{apptId} -> /patients/{id}/appointment/{apptId}
            rewrite ^/api(/.*)$ $1 break; # Strip /api prefix
            proxy_pass http://appointment-service:8080; # Proxy to root

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }


        # Patient Service (Handles remaining /api/patients/ paths)
        location /api/patients/ {
            proxy_pass http://patient-service:8080/patients/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Appointment Service (Specific doctor routes - BEFORE general doctor route)
         location ~ ^/api/doctors/([a-fA-F0-9-]+)/appointments {
            # Map /api/doctors/{id}/appointments... -> /doctors/{id}/appointments...
            rewrite ^/api(/.*)$ $1 break; # Strip /api prefix
            proxy_pass http://appointment-service:8080; # Proxy to root

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
         location ~ ^/api/doctors/([a-fA-F0-9-]+)/appointment/([a-fA-F0-9-]+) {
            # Map /api/doctors/{id}/appointment/{apptId} -> /doctors/{id}/appointment/{apptId}
            rewrite ^/api(/.*)$ $1 break; # Strip /api prefix
            proxy_pass http://appointment-service:8080; # Proxy to root

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

		location = /api/doctors {
			# Assuming your backend expects /doctors for the list/create endpoint
			proxy_pass http://doctor-service:8080/doctors; # No trailing slash here
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			if ($request_method = 'OPTIONS') {
				return 204;
			}
		}

        # Doctor Service (Handles remaining /api/doctors/ paths)
        location /api/doctors/ {
            proxy_pass http://doctor-service:8080/doctors/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Appointment Service (Base routes)
        # Exact match for POST /api/appointments
        location = /api/appointments {
             proxy_pass http://appointment-service:8080/appointments; # No trailing slash
             proxy_set_header Host $host;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_set_header X-Forwarded-Proto $scheme;
        }
        # Prefix match for DELETE/PATCH/POST /api/appointments/{id}
        location /api/appointments/ { # Trailing slash here
             proxy_pass http://appointment-service:8080/appointments/; # Trailing slash here
             proxy_set_header Host $host;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Condition Service
        # Exact match for POST /api/conditions
        location = /api/conditions {
            proxy_pass http://condition-service:8080/conditions; # No trailing slash
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        # Prefix match for GET/PATCH /api/conditions/{id}, GET /api/conditions/patient/{id}
        location /api/conditions/ { # Trailing slash here
            proxy_pass http://condition-service:8080/conditions/; # Trailing slash here
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Prescription Service
        # Exact match for POST /api/prescriptions
        location = /api/prescriptions {
            proxy_pass http://prescription-service:8080/prescriptions; # No trailing slash
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        # Prefix match for GET/PATCH/DELETE /api/prescriptions/{id}
        location /api/prescriptions/ { # Trailing slash here
            proxy_pass http://prescription-service:8080/prescriptions/; # Trailing slash here
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Resource Service
        # Exact match for POST /api/resources
        location = /api/resources {
            proxy_pass http://resource-service:8080/resources; # No trailing slash
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        # Prefix match for GET /api/resources/available, GET /api/resources/{id}, etc.
        location /api/resources/ { # Trailing slash here
            proxy_pass http://resource-service:8080/resources/; # Trailing slash here
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # --- Error Handling ---
        proxy_intercept_errors on;
        error_page 500 502 503 504 /50x.json;
        location = /50x.json {
             root /usr/share/nginx/html;
             internal;
             default_type application/json;

            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PATCH, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
             return 500 '{"error": "Internal Server Error", "message": "An error occurred processing your request."}';
        }

        # --- Proxy Timeouts ---
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }
}
