openapi: 3.0.4
info:
  title: Prescription Service API
  version: 1.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - description: Prescription Service Endpoint
    url: /
tags:
  - name: Prescriptions # Changed tag name for consistency
paths:
  /prescriptions: # Corresponds to /api/prescriptions
    post:
      tags:
        - Prescriptions # Updated tag
      summary: Create a prescription record for a patient
      operationId: createPrescription
      requestBody:
        description: Details of the prescription to be created.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewPrescription"
      responses:
        "201":
          description: Prescription record created successfully. Returns the created prescription details.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Prescription" # Return full Prescription on create
        "400": # Added Bad Request
          description: Bad Request - Invalid input data.
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorDetail"
        "500":
          $ref: "#/components/responses/InternalServerErrorResponse"
    # <<< NEW GET ENDPOINT ADDED HERE >>>
    get:
      tags:
        - Prescriptions # Updated tag
      summary: Get prescriptions by patient and date range
      description: Retrieves a list of prescriptions for a specific patient that were active (start date before or on 'to', end date after or on 'from') within the specified date range.
      operationId: getPrescriptionsByPatientAndRange
      parameters:
        - $ref: "#/components/parameters/queryPatientId"
        - $ref: "#/components/parameters/queryFrom"
        - $ref: "#/components/parameters/queryTo"
      responses:
        "200":
          $ref: "#/components/responses/Prescriptions" # Use new response definition
        "400": # Added Bad Request for missing/invalid params
          description: Bad Request - Missing required parameters or invalid date format.
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorDetail"
              examples:
                missingParam:
                  summary: Example missing parameter
                  value:
                    title: Bad Request
                    status: 400
                    code: request.missing-parameter
                    detail: "Required query parameter 'patientId' is missing."
                invalidDateFormat:
                  summary: Example invalid date format
                  value:
                    title: Bad Request
                    status: 400
                    code: request.invalid-parameter
                    detail: "Invalid format for parameter 'from'. Expected YYYY-MM-DD."
        "500":
          $ref: "#/components/responses/InternalServerErrorResponse"

  /prescriptions/{prescriptionId}: # Corresponds to /api/prescriptions/{prescriptionId}
    get:
      tags:
        - Prescriptions # Updated tag
      summary: Prescription detail
      operationId: prescriptionDetail
      parameters:
        - $ref: "#/components/parameters/pathPrescriptionId" # Renamed for clarity
      responses:
        "200":
          description: Prescription details, potentially including linked appointment.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Prescription"
        "404":
          description: Prescription not found.
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorDetail"
              examples: # Added example
                prescriptionNotFound:
                  summary: Example prescription not found
                  value:
                    title: Resource Not Found
                    status: 404
                    code: prescription.not-found
                    detail: Prescription with ID a1b2c3d4-e5f6-7890-1234-567890abcdef not found.
        "500":
          $ref: "#/components/responses/InternalServerErrorResponse"
    patch:
      tags:
        - Prescriptions # Updated tag
      summary: Update prescription
      operationId: updatePrescription
      parameters:
        - $ref: "#/components/parameters/pathPrescriptionId" # Renamed for clarity
      requestBody:
        description: Updated fields of a prescription
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePrescription"
      responses:
        "200":
          description: Prescription details after update.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Prescription"
        "400": # Added Bad Request
          description: Bad Request - Invalid input data for update.
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorDetail"
        "404":
          description: Prescription not found.
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorDetail"
              examples: # Added example
                prescriptionNotFoundForUpdate:
                  summary: Example prescription not found for update
                  value:
                    title: Resource Not Found
                    status: 404
                    code: prescription.not-found
                    detail: Prescription with ID a1b2c3d4-e5f6-7890-1234-567890abcdef not found.
        "500":
          $ref: "#/components/responses/InternalServerErrorResponse"
    delete:
      tags:
        - Prescriptions # Updated tag
      summary: Delete prescription
      operationId: deletePrescription
      parameters:
        - $ref: "#/components/parameters/pathPrescriptionId" # Renamed for clarity
      responses:
        "204":
          description: Deleted successfully.
        "404":
          description: Prescription not found.
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorDetail"
              examples: # Added example
                prescriptionNotFoundForDelete:
                  summary: Example prescription not found for delete
                  value:
                    title: Resource Not Found
                    status: 404
                    code: prescription.not-found
                    detail: Prescription with ID a1b2c3d4-e5f6-7890-1234-567890abcdef not found.
        "500":
          $ref: "#/components/responses/InternalServerErrorResponse"

components:
  schemas:
    # --- Schemas remain largely the same ---
    NewPrescription:
      type: object
      required: # Ensure all required fields are listed
        - patientId
        - name
        - start
        - end
      properties:
        patientId:
          type: string
          format: uuid
        doctorsNote:
          type: string
        name:
          type: string
        start:
          type: string
          format: date-time # Use date-time for start/end
        end:
          type: string
          format: date-time # Use date-time for start/end
        appointmentId: # Optional link to an appointment
          type: string
          format: uuid
    PrescriptionDisplay:
      type: object
      description: Basic info about a patient's prescription.
      required: # Ensure all required fields are listed
        - id
        - name
        - start
        - end
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        start:
          type: string
          format: date-time # Use date-time for start/end
        end:
          type: string
          format: date-time # Use date-time for start/end
        appointmentId: # Optional link
          type: string
          format: uuid
          readOnly: true # Usually not changed after creation via this field
    AppointmentStatus: # Copied for AppointmentDisplay reference
      type: string
      enum:
        - requested
        - cancelled
        - scheduled
        - completed
        - denied
    AppointmentType: # Copied for AppointmentDisplay reference
      type: string
      enum:
        - regular_check
    AppointmentDisplay: # Copied for Prescription reference
      type: object
      description: Represents an appointment view relevant to a prescription.
      properties:
        id:
          type: string
          format: uuid
        appointmentDateTime:
          type: string
          format: date-time
        doctorName:
          type: string
        patientName:
          type: string
        status:
          $ref: "#/components/schemas/AppointmentStatus"
        type:
          $ref: "#/components/schemas/AppointmentType"
      required:
        - id
        - appointmentDateTime
        - doctorName
        - patientName
        - status
        - type
    Prescription: # Full detail model
      allOf:
        - $ref: "#/components/schemas/PrescriptionDisplay"
        - type: object
          properties:
            doctorsNote:
              type: string
            appointment: # Optional enriched appointment details
              $ref: "#/components/schemas/AppointmentDisplay"
            # patientId is implicitly part of PrescriptionDisplay via context,
            # but could be added explicitly if needed for this detailed view
            # patientId:
            #   type: string
            #   format: uuid
    UpdatePrescription: # Input for update
      type: object
      properties:
        name:
          type: string
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        # appointmentId: # Usually not changed via PATCH
        #   type: string
        #   format: uuid
        # patientId: # Usually not changed via PATCH
        #   type: string
        #   format: uuid
        doctorsNote:
          type: string
    ErrorDetail: # Shared Error Schema
      type: object
      description: Standardized error details (RFC 9457).
      properties:
        title:
          type: string
        code:
          type: string
        status:
          type: integer
        detail:
          type: string
      additionalProperties: true
      required:
        - title
        - code
        - status
        - detail

  parameters:
    # --- Renamed path parameter ---
    pathPrescriptionId:
      name: prescriptionId
      in: path
      required: true
      description: The unique identifier (UUID) of a prescription.
      schema:
        type: string
        format: uuid
      example: a1b2c3d4-e5f6-7890-1234-567890abcdef

    # --- Added query parameters ---
    queryPatientId:
      name: patientId
      in: query
      required: true
      description: The unique identifier (UUID) of the patient.
      schema:
        type: string
        format: uuid
      example: f47ac10b-58cc-4372-a567-0e02b2c3d479
    queryFrom:
      name: from
      in: query
      required: true
      description: The start date (inclusive) for the query range (YYYY-MM-DD format).
      schema:
        type: string
        format: date # Use date format for query range
      example: "2024-07-01"
    queryTo:
      name: to
      in: query
      required: true
      description: The end date (inclusive) for the query range (YYYY-MM-DD format).
      schema:
        type: string
        format: date # Use date format for query range
      example: "2024-07-31"

  responses:
    InternalServerErrorResponse:
      description: An error occurred. See specific status code for details.
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/ErrorDetail"
          example:
            title: Internal Server Error
            status: 500
            code: internal.server.error
            detail: An unknown server error occurred
    # <<< NEW RESPONSE DEFINITION ADDED HERE >>>
    Prescriptions:
      description: Successfully retrieved list of prescriptions.
      content:
        application/json:
          schema:
            type: object
            required:
              - prescriptions
            properties:
              prescriptions:
                type: array
                items:
                  $ref: "#/components/schemas/PrescriptionDisplay" # Return basic display info
