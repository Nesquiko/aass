x-db-credentials: &db_credentials
  POSTGRES_USER: &db_user camunda_user
  POSTGRES_PASSWORD: &db_password camunda_password
  POSTGRES_DB: &db_name camunda_db

services:
  camunda-db:
    image: postgres:17
    container_name: camunda-db
    environment:
      <<: *db_credentials
    volumes:
      - camunda-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", *db_user, "-d", *db_name]
      interval: 2s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    networks:
      - medical_network

  camunda-platform:
    image: camunda/camunda-bpm-platform:run-latest
    container_name: camunda-platform
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://camunda-db:5432/camunda_db
      SPRING_DATASOURCE_USERNAME: *db_user
      SPRING_DATASOURCE_PASSWORD: *db_password
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      CAMUNDA_BPM_HISTORY_LEVEL: full
    depends_on:
      camunda-db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - medical_network

  api-gateway:
    image: nginx:stable-alpine
    container_name: api-gateway
    ports:
      - "42069:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./api-gateway-logs:/var/log/nginx
    networks:
      - medical_network
    restart: unless-stopped
    depends_on:
      - user-service
      - resource-service
      - medical-service
      - appointment-service

  mongo_db:
    image: mongo:7.0-rc
    container_name: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - db_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mysecret
    networks:
      - medical_network

  mongo_express:
    image: mongo-express
    container_name: mongo_express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: mysecret
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_BASICAUTH_USERNAME: mexpress
      ME_CONFIG_BASICAUTH_PASSWORD: mexpress
    depends_on:
      - mongo_db
    networks:
      - medical_network

  user-service:
    build:
      context: .
      dockerfile: ./user-service/Dockerfile
    container_name: user-service
    env_file:
      - ./user-service/local.env
    networks:
      - medical_network
    restart: unless-stopped
    depends_on:
      - mongo_db

  resource-service:
    build:
      context: .
      dockerfile: ./resource-service/Dockerfile
    container_name: resource-service
    env_file:
      - ./resource-service/local.env
    networks:
      - medical_network
    restart: unless-stopped
    depends_on:
      - mongo_db

  medical-service:
    build:
      context: .
      dockerfile: ./medical-service/Dockerfile
    container_name: medical-service
    env_file:
      - ./medical-service/local.env
    networks:
      - medical_network
    restart: unless-stopped
    depends_on:
      - mongo_db

  appointment-service:
    build:
      context: .
      dockerfile: ./appointment-service/Dockerfile
    container_name: appointment-service
    env_file:
      - ./appointment-service/local.env
    networks:
      - medical_network
    restart: unless-stopped
    depends_on:
      - mongo_db

networks:
  medical_network:
    driver: bridge

volumes:
  camunda-db-data: {}
  db_data: {}
