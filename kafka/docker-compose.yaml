services:
  # inspired by https://docs.docker.com/guides/kafka/#defining-the-listeners
  kafka:
    image: apache/kafka:4.0.0
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_LISTENERS: "INTERNAL://:9092,EXTERNAL://:29092,CONTROLLER://:9093"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:9092,EXTERNAL://localhost:29092,CONTROLLER://kafka:9093"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_LOG_DIRS: "/opt/kafka/data"
    networks:
      - medical_network
    restart: unless-stopped

  api-gateway:
    image: nginx:stable-alpine
    container_name: api-gateway
    ports:
      - "42069:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./api-gateway-logs:/var/log/nginx
    networks:
      - medical_network
    restart: unless-stopped
    depends_on:
      - user-service
      - resource-service
      - medical-service
      - appointment-service

  mongo_db:
    image: mongo:7.0-rc
    container_name: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - db_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mysecret
    networks:
      - medical_network

  mongo_express:
    image: mongo-express
    container_name: mongo_express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: mysecret
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_BASICAUTH_USERNAME: mexpress
      ME_CONFIG_BASICAUTH_PASSWORD: mexpress
    depends_on:
      - mongo_db
    networks:
      - medical_network

  user-service:
    build:
      context: .
      dockerfile: ./user-service/Dockerfile
    container_name: user-service
    env_file:
      - ./user-service/local.env
    networks:
      - medical_network
    restart: unless-stopped
    depends_on:
      - mongo_db

  resource-service:
    build:
      context: .
      dockerfile: ./resource-service/Dockerfile
    container_name: resource-service
    env_file:
      - ./resource-service/local.env
    networks:
      - medical_network
    restart: unless-stopped
    depends_on:
      - mongo_db

  medical-service:
    build:
      context: .
      dockerfile: ./medical-service/Dockerfile
    container_name: medical-service
    env_file:
      - ./medical-service/local.env
    networks:
      - medical_network
    restart: unless-stopped
    depends_on:
      - mongo_db

  appointment-service:
    build:
      context: .
      dockerfile: ./appointment-service/Dockerfile
    container_name: appointment-service
    env_file:
      - ./appointment-service/local.env
    networks:
      - medical_network
    restart: unless-stopped
    depends_on:
      - mongo_db

networks:
  medical_network:
    driver: bridge

volumes:
  db_data: {}
